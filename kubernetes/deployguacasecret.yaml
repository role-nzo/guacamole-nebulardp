apiVersion: apps/v1
kind: Deployment
metadata:
  name: guacd-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: guacd
  template:
    metadata:
      labels:
        app: guacd
    spec:
      containers:
      - name: guacd-container
        image:  "docker.io/devrols/guacd-nebula:0.0.7"
        env:
        - name: NETMASK
          value: "22"
        - name: LIGHTHOUSE_SUBNET
          value: "192.168.100.0"
        - name: GUACD_SUBNET
          value: "192.168.101.0"
        - name: HOSTS_SUBNET
          value: "192.168.102.0"
        - name: NEBULA_INIT_SCRIPT
          value: "nebula-init"
        - name: NEBULA_STOP_SCRIPT
          value: "nebula-stop"
        - name: CERT_DURATION
          value: "3m"
        - name: CERT_DIR
          value: "/tmp/nebulaguacd"
        - name: DEV_PREFIX
          value: "nebula"
        - name: PORT_PREFIX
          value: "424"
        volumeMounts:
        - name: guacd-config
          mountPath: /etc/nebula/config.guacd.parametric.yml
          subPath: config.guacd.parametric.yml
        - name: guacd-secrets
          mountPath: /etc/nebula/ca.key
          subPath: ca.key
        - name: guacd-secrets
          mountPath: /etc/nebula/guacd.crt
          subPath: guacd.crt
        - name: guacd-secrets
          mountPath: /etc/nebula/guacd.key
          subPath: guacd.key
        - name: guacd-secrets
          mountPath: /etc/nebula/ca.crt
          subPath: ca.crt
        securityContext:
          privileged: true
        ports:
        - containerPort: 4822
      volumes:
      - name: guacd-config
        configMap:
          name: guacd-config
          items:
            - key: guacd.crt
              path: guacd.crt
            - key: config.guacd.parametric.yml
              path: config.guacd.parametric.yml
      - name: guacd-secrets
        secret:
          secretName: guacd-secrets
          items:
            - key: guacd.key
              path: guacd.key
            - key: ca.crt
              path: ca.crt
            - key: ca.key
              path: ca.key
---

apiVersion: v1
kind: Service
metadata:
  name: guacd-ip
spec:
  selector:
    app: guacd
  ports:
    - port: 4822
  clusterIP: 10.1.0.2
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql-container
        image: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          value: "guacamole_db"
        volumeMounts:
        - name: mysqldb-config
          mountPath: /docker-entrypoint-initdb.d/start-mysql.sh
          subPath: start-mysql.sh
        - name: mysqldb-config
          mountPath: /docker-entrypoint-initdb.d/guacamole_db.sql
          subPath: guacamole_db.sql
        securityContext:
          privileged: true
        ports:
        - containerPort: 3306
      volumes:
      - name: mysqldb-config
        configMap:
          name: mysqldb-config
          items:
            - key: start-mysql.sh
              path: start-mysql.sh
            - key: guacamole_db.sql
              path: guacamole_db.sql
---

apiVersion: v1
kind: Service
metadata:
  name: mysql-ip
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
  clusterIP: 10.1.0.3
  type: ClusterIP
